Maven이란? 프로젝트 관리도구
필요한 모든 라이브러리를 각 프로젝트 마다 각각의 사이트로 다운 받아서 써야되는 번거로움이 있다.
그렇게 하지 않고 중앙저장소에 모든 라이브러리를 모아두고 프로젝트에서 Pom.xml에서 필요한 라이브러리 리스트를 적어 놓기만 한다.
프로젝트가 시작이 되었을때 Maven이 Pom.xml에 적힌 리스트를 보고 중앙저장소에 있는 라이브러리들을 .m2폴더의 repository에 다운 받아 빌드를 해준다.
---------------------------------------------------------------------------------------------------------
 Lombok이란?
 Java의 Getter,Setter,생성자들을 자동으로 생성해주는 어노테이션 라이브러리들을 포함한 도구
---------------------------------------------------------------------------------------------------------
 yaml이란?
프로젝트의 PORT,DB,인코딩등 전반적인 설정을 yml 파일로 한다.(기존에서는 XML로 했었다.)
yaml은 xml,Json보다 가볍고 가독성이 좋다.
Spring에서는 web.xml,root-context.xml,servlet-context.xml을 합친 application.yml에서 적용하면 된다.
---------------------------------------------------------------------------------------------------------
ORM이란?
Java(다른 언어) Object를 테이블로 매핑해주는 기술
---------------------------------------------------------------------------------------------------------
Transactional 어노테이션
SpringBoot는 DB에 데이터를 보낼때 JPA의 영속성 컨텍스트에 1차 캐시에 먼저 저장한다.
그 뒤에 flush하여 DB에 보내진다.
하지만 flush할때 해당 데이터는 1차 캐시에 유지 된다.
User객체가 1차 캐시에 저장되어 영속화 되었다.

Update(put)를 할때 Transactional이 붙었을때 과정 
1. findbyId메서드로 id를 찾으면 그때 1차 캐시에 해당 데이터가 저장 되어 영속화가 된다.
2. 받아온 uesr의 password와 email을 변경한다. -> 변경이 되었다는 것을 자동으로 감지한다.(더티 채킹)
3. 해당 함수가 종료가 되면  Transactional이 자동 commit을 해준다.
---------------------------------------------------------------------------------------------------------
Get 요청
주소에 데이터를 담아 보낸다. http://localhost:8000/blog/dummy/user?username=chu  [Key = value]
Body로 데이터를 담아 보내지 않는다.

Post,Put,Delete 요청
사실 Html은 form 태그로 get과 post만 가능하다.
그래서 모두 통일하기 위해서 자바스크립트로 ajax 요청을 하고 데이터는 Json으로 보낸다.
---------------------------------------------------------------------------------------------------------
회원가입시 Ajax를 사용하는 2가지 이유
1. 요청에 대한 응답을 html이 아닌 Data(json)으로 받기 위해서 
[브라우저가 아닌 앱은 서버에서 클라이언트에게 리턴할때 데이터를 리턴해야된다. 그래서 통일한다. java는 json값을 받아야한다.]
2. 비동기 통신을 하기 위해서